# ==========================================
# 测试执行微服务配置文件
# ==========================================

# ==========================================
# 基础服务配置
# ==========================================
server:
  port: 8082
  servlet:
    context-path: /

# ==========================================
# Spring框架配置
# ==========================================
spring:
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  application:
    name: my-test-execute
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 200MB
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/tenant_center?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: password
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
    open-in-view: false
    database-platform: org.hibernate.dialect.MySQL8Dialect
  # Redis缓存配置
  redis:
    host: localhost
    port: 6379
    # password: 如果有密码，请取消注释并填写
    database: 0
    # 使用Redisson客户端
    redisson:
      config: |
        singleServerConfig:
          address: redis://localhost:6379
          database: 0
          # password: 如果有密码，请取消注释并填写
          connectionMinimumIdleSize: 8
          connectionPoolSize: 64
          connectTimeout: 10000
          timeout: 3000
  # 线程池配置 (来自file-import-export-starter)
  task:
    execution:
      pool:
        core-size: 5
        max-size: 20
        queue-capacity: 100
        keep-alive: 60s
      thread-name-prefix: "file-io-"

# ==========================================
# Knife4j API文档配置
# ==========================================
knife4j:
  enable: true
  setting:
    language: zh-CN
    enable-swagger-models: true
    enable-document-manage: true
    swagger-model-name: 实体类列表
    enable-version: false
    enable-reload-cache-parameter: false
    enable-after-script: true
    enable-filter-multipart-api-method-type: POST
    enable-filter-multipart-apis: false
    enable-request-cache: true
    enable-host: false
    enable-host-text: ""
    enable-home-custom: false
    home-custom-path: ""
    enable-search: true
    enable-footer: false
    enable-footer-custom: true
    footer-custom-content: Apache License 2.0 | Copyright  2024-[测试执行微服务]
    enable-dynamic-parameter: false
    enable-debug: true
    enable-open-api: false
    enable-group: true
  cors: false
  production: false
  basic:
    enable: false
    username: test
    password: 12313

# ==========================================
# 文件导入导出模块配置 (file-import-export-starter)
# ==========================================
file:
  import:
    export:
      enabled: true
      import:
        max-batch-size: 20000  # Excel单次导入限制
        max-files: 20          # 最大上传文件数
        concurrent: 1          # 导入并发数
      export:
        max-batch-size: 50000  # CSV/TXT单次导出限制
        concurrent: 10         # 导出并发数
      path:
        upload-dir: ${file.import.export.path.upload-dir:C:\\Users\\lm\\Downloads\\uploads}  # 支持环境变量配置
        export-dir: ${file.import.export.path.export-dir:C:\\Users\\lm\\Downloads\\exports}  # 支持环境变量配置
      redis:
        key-prefix: "file-io"
        task-ttl: 86400       # 任务过期时间(秒)
      swagger:
        enabled: false         # 禁用Swagger文档 (原starter默认为true)

# ==========================================
# 租户路由模块配置 (tenant-routing-starter)
# ==========================================
tenant:
  routing:
    enabled: true
    header-name: X-Tenant-ID
    required: false  # 设置为false，这样没有租户ID也能访问
    exclude-paths: 
      - /swagger-ui.html
      - /doc.html
      - /swagger-resources/**
      - /v3/api-docs/**
      - /webjars/**
      - /actuator/**
      - /api/public/**
      - /knife4j/**
      - /favicon.ico
    tenant-center:
      url: jdbc:mysql://localhost:3306/tenant_center?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
      username: root
      password: password
    max-pool-size: 10
    min-idle: 2
    connection-timeout: 30000
    idle-timeout: 600000
    max-lifetime: 1800000
    # Redis配置
    redis:
      host: localhost
      port: 6379
      # password: 如果有密码，请取消注释并填写
      database: 0
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1
    # 租户缓存配置
    preload-enabled: true
    cache-expire-time: 604800  # 7天，单位秒
    batch-size: 100

# ==========================================
# Elasticsearch模块配置 (elasticsearch-crud-starter)
# ==========================================
elasticsearch:
  crud:
    enabled: true
    # ES节点地址配置
    hosts:
      - localhost:9200
    # ES认证配置（如果ES启用了安全认证，请取消注释并配置正确的用户名密码）
    # 方案1：如果ES启用了安全认证，使用以下配置
    username: elastic
    password: 123456
    # 方案2：如果ES没有启用安全认证，注释掉上面的用户名密码配置
    # username: 
    # password: 
    
    # 连接超时配置
    connection-timeout: 5000
    socket-timeout: 60000
    request-timeout: 60000
    max-connections: 100
    max-connections-per-route: 100
    
    # 数据同步配置
    sync:
      batch-size: 1000
      thread-pool-size: 10
      retry-times: 3
      retry-interval: 1000
      enable-checkpoint: true
      checkpoint-interval: 1000
    
    # 租户配置（多租户场景）
    tenant:
      enabled: false  # 暂时禁用租户功能进行基础测试
      index-prefix: "tenant_"
      auto-create-index: true
      default-shards: 3
      default-replicas: 1
    
    # 索引配置
    index:
      use-keyword-as-default: true
      default-shards: 1
      default-replicas: 0
      refresh-interval: "1s"
    
    # 队列配置（用于数据同步）
    queue:
      type: redis
      redis:
        key-prefix: "es:sync:"
        max-retry: 3
        consumer-threads: 5

# ==========================================
# 日志配置
# ==========================================
logging:
  level:
    root: INFO
    com.tenant: DEBUG
    com.example.elasticsearch: DEBUG
    org.elasticsearch: INFO
    org.springframework.data.elasticsearch: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE