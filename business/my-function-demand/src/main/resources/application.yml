# ==========================================
# 功能需求管理微服务配置文件
# ==========================================

# ==========================================
# 基础服务配置
# ==========================================
server:
  port: 8083
  servlet:
    context-path: /

# ==========================================
# Spring框架配置
# ==========================================
spring:
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  application:
    name: my-function-demand
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 200MB
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/tenant_center?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: password
    # Druid连接池监控配置
    druid:
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: admin
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
    open-in-view: false
    database-platform: org.hibernate.dialect.MySQL8Dialect
  # Redis缓存配置
  redis:
    host: localhost
    port: 6379
    # password: 如果有密码，请取消注释并填写
    database: 0
    # 使用Redisson客户端
    redisson:
      config: |
        singleServerConfig:
          address: redis://localhost:6379
          database: 0
          # password: 如果有密码，请取消注释并填写
          connectionMinimumIdleSize: 8
          connectionPoolSize: 64
          connectTimeout: 10000
          timeout: 3000
  # 线程池配置
  task:
    execution:
      pool:
        core-size: 5
        max-size: 20
        queue-capacity: 100
        keep-alive: 60s
      thread-name-prefix: "function-demand-"

# ==========================================
# Knife4j API文档配置
# ==========================================
knife4j:
  enable: true
  setting:
    language: zh-CN
    enable-swagger-models: true
    enable-document-manage: true
    swagger-model-name: 实体类列表
    enable-version: false
    enable-reload-cache-parameter: false
    enable-after-script: true
    enable-filter-multipart-api-method-type: POST
    enable-filter-multipart-apis: false
    enable-request-cache: true
    enable-host: false
    enable-host-text: ""
    enable-home-custom: false
    home-custom-path: ""
    enable-search: true
    enable-footer: false
    enable-footer-custom: true
    footer-custom-content: Apache License 2.0 | Copyright  2024-[功能需求管理微服务]
    enable-dynamic-parameter: false
    enable-debug: true
    enable-open-api: false
    enable-group: true
  cors: false
  production: false
  basic:
    enable: false
    username: test
    password: 12313

# ==========================================
# 文件导入导出模块配置
# ==========================================
file:
  import:
    export:
      enabled: true
      import:
        max-batch-size: 20000
        max-files: 20
        concurrent: 1
      export:
        max-batch-size: 50000
        concurrent: 10
      path:
        upload-dir: C:\\Users\\lm\\Downloads\\uploads
        export-dir: C:\\Users\\lm\\Downloads\\exports
      redis:
        key-prefix: "function-demand"
        task-ttl: 86400
      swagger:
        enabled: false

# ==========================================
# 租户路由模块配置
# ==========================================
tenant:
  routing:
    enabled: true
    header-name: X-Tenant-ID
    required: false
    exclude-paths: 
      - /swagger-ui.html
      - /doc.html
      - /swagger-resources/**
      - /v3/api-docs/**
    redis:
      host: localhost
      port: 6379
      password: ""
      database: 0
      pool:
        min-idle: 8
        max-active: 64
    batch-size: 1000

# ==========================================
# Elasticsearch配置
# ==========================================
elasticsearch:
  crud:
    enabled: true
    hosts:
      - localhost:9200
    username: ""
    password: ""
    connection-timeout: 5000
    socket-timeout: 60000
    request-timeout: 60000
    max-connections: 100
    max-connections-per-route: 100
    tenant:
      enabled: true
      index-prefix: "function_demand_"
      auto-create-index: true
      default-shards: 1
      default-replicas: 0
    index:
      use-keyword-as-default: true
      default-shards: 1
      default-replicas: 0
      refresh-interval: "1s"
    sync:
      batch-size: 1000
      thread-pool-size: 10
      retry-times: 3
      retry-interval: 1000
      enable-checkpoint: true
      checkpoint-interval: 1000
    queue:
      type: redis
      redis:
        key-prefix: "es:sync:"
        max-retry: 3
        consumer-threads: 5

# ==========================================
# 号段ID生成器配置
# ==========================================
segment-id:
  enabled: true
  redis:
    address: redis://localhost:6379
    password: ""
  database:
    url: jdbc:mysql://localhost:3306/tenant_center?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: password
    driver-class-name: com.mysql.cj.jdbc.Driver 