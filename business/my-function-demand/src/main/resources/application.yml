# 需求管理和功能管理模块主配置文件
spring:
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  application:
    name: my-function-demand
  profiles:
    active: dev
  
  # 基础数据源配置（作为默认数据源，tenant-routing-starter会在此基础上进行动态路由）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/tenant_center?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: password
    # Druid连接池配置
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 监控配置
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: admin
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'

  # JPA配置
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true
        # 批量操作配置
        jdbc:
          batch_size: 50
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        # 二级缓存配置
        cache:
          use_second_level_cache: false
          use_query_cache: false
        # 统计信息
        generate_statistics: false

  # Redis配置
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: ${REDIS_DATABASE:0}
    timeout: 5000ms
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 5
        max-wait: 2000ms
      shutdown-timeout: 100ms

  # Jackson配置
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false

  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true

# 服务器配置
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  # Tomcat配置
  tomcat:
    uri-encoding: UTF-8
    max-threads: 200
    min-spare-threads: 10
    max-connections: 10000
    accept-count: 100
    connection-timeout: 20000

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,druid
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

# 租户路由配置 (使用tenant-routing-starter)
tenant:
  routing:
    enabled: true
    header-name: X-Tenant-ID
    required: false  # 设置为false，这样没有租户ID也能访问
    exclude-paths: 
      - /swagger-ui.html
      - /doc.html
      - /swagger-resources/**
      - /v3/api-docs/**
      - /webjars/**
      - /actuator/**
      - /api/public/**
      - /knife4j/**
      - /favicon.ico
    tenant-center:
      url: jdbc:mysql://localhost:3306/tenant_center?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
      username: root
      password: password
    max-pool-size: 10
    min-idle: 2
    connection-timeout: 30000
    idle-timeout: 600000
    max-lifetime: 1800000
    # Redis配置
    redis:
      host: localhost
      port: 6379
      database: 0
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1
    # 租户缓存配置
    preload-enabled: true
    cache-expire-time: 604800  # 7天，单位秒
    batch-size: 100

# 文件导入导出配置 (file-import-export-starter)
file:
  import:
    export:
      enabled: true
      import:
        max-batch-size: 20000  # Excel单次导入限制
        max-files: 20          # 最大上传文件数
        concurrent: 1          # 导入并发数
      export:
        max-batch-size: 50000  # CSV/TXT单次导出限制
        concurrent: 10         # 导出并发数
      path:
        upload-dir: ${FILE_UPLOAD_PATH:/data/uploads}  # 上传目录
        export-dir: ${FILE_EXPORT_PATH:/data/exports}  # 导出目录
      redis:
        key-prefix: "file-io"
        task-ttl: 86400       # 任务过期时间(秒)
      swagger:
        enabled: false         # 禁用Swagger文档

# 缓存配置
cache:
  # 树形结构缓存配置
  tree:
    enabled: true
    ttl: 1800  # 30分钟
    max-size: 10000
  # 查询结果缓存配置
  query:
    enabled: true
    ttl: 300   # 5分钟
    max-size: 5000

# 性能监控配置
performance:
  monitoring:
    enabled: true
    # 慢查询阈值（毫秒）
    slow-query-threshold: 1000
    # 批量操作监控
    batch-operation:
      enabled: true
      threshold: 5000
    # 内存使用监控
    memory:
      enabled: true
      threshold-percentage: 80

# 业务规则配置
business:
  rules:
    # 树形结构最大层级
    max-tree-level: 5
    # 批量操作最大数量
    max-batch-size: 1000
    # 搜索结果最大数量
    max-search-results: 10000
    # 导入单次最大记录数
    max-import-records: 20000

# 日志配置
logging:
  config: classpath:logback-spring.xml
  level:
    com.example.functiondemand: INFO
    com.example.tenant.routing: INFO
    com.example.file.importexport: INFO
    org.springframework.web: WARN
    org.hibernate: WARN
    com.alibaba.druid: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{tenantId}] [%X{traceId}] %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{tenantId}] [%X{traceId}] %logger{50} - %msg%n"

# Knife4j API文档配置
knife4j:
  enable: true
  setting:
    language: zh-CN
    enable-version: true
    enable-reload-cache-parameter: true
    enable-after-script: true
    enable-filter-multipart-api-method-type: POST
    enable-filter-multipart-apis: true
    enable-request-cache: true
    enable-host: false
    enable-home-custom: true
    home-custom-path: classpath:markdown/home.md
  cors: true
  production: false
  basic:
    enable: false
    username: admin
    password: 123456

# 自定义配置
app:
  name: 需求管理和功能管理模块
  version: 1.0.0
  description: 提供需求管理、功能点管理和分类目录管理的完整解决方案
  author: System Team
  contact:
    email: support@example.com
    url: https://example.com
  # 功能开关
  features:
    # 启用树形结构缓存
    enable-tree-cache: true
    # 启用批量操作优化
    enable-batch-optimization: true
    # 启用性能监控
    enable-performance-monitoring: true
    # 启用数据验证
    enable-data-validation: true
    # 启用审计日志
    enable-audit-log: true