# 开发环境配置
spring:
  # 开发环境数据源配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/tenant_center?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: password
    # Druid连接池配置
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 监控配置
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: admin
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'

  # JPA配置
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        generate_statistics: true

  # Redis配置
  redis:
    host: localhost
    port: 6379
    password: 
    database: 0
    timeout: 5000ms

  # 热部署配置
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java
      exclude: WEB-INF/**
    livereload:
      enabled: true
      port: 35729

# 服务器配置
server:
  port: 8080

# 租户路由配置 (使用tenant-routing-starter)
tenant:
  routing:
    enabled: true
    header-name: X-Tenant-ID
    required: false  # 设置为false，这样没有租户ID也能访问
    exclude-paths: 
      - /swagger-ui.html
      - /doc.html
      - /swagger-resources/**
      - /v3/api-docs/**
      - /webjars/**
      - /actuator/**
      - /api/public/**
      - /knife4j/**
      - /favicon.ico
    tenant-center:
      url: jdbc:mysql://localhost:3306/tenant_center?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
      username: root
      password: password
    max-pool-size: 10
    min-idle: 2
    connection-timeout: 30000
    idle-timeout: 600000
    max-lifetime: 1800000
    # Redis配置
    redis:
      host: localhost
      port: 6379
      database: 0
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1
    # 租户缓存配置
    preload-enabled: true
    cache-expire-time: 604800  # 7天，单位秒
    batch-size: 100

# 文件导入导出配置 (file-import-export-starter)
file:
  import:
    export:
      enabled: true
      import:
        max-batch-size: 10000  # 开发环境较小的批量大小
        max-files: 10          # 最大上传文件数
        concurrent: 1          # 导入并发数
      export:
        max-batch-size: 20000  # CSV/TXT单次导出限制
        concurrent: 5          # 导出并发数
      path:
        upload-dir: /tmp/dev/uploads  # 上传目录
        export-dir: /tmp/dev/exports  # 导出目录
      redis:
        key-prefix: "file-io-dev"
        task-ttl: 86400       # 任务过期时间(秒)
      swagger:
        enabled: true         # 开发环境启用Swagger文档

# 缓存配置
cache:
  tree:
    enabled: true
    ttl: 600  # 开发环境较短的缓存时间
    max-size: 1000
  query:
    enabled: true
    ttl: 60   # 1分钟
    max-size: 500

# 性能监控配置
performance:
  monitoring:
    enabled: true
    slow-query-threshold: 500  # 开发环境更严格的慢查询阈值
    batch-operation:
      enabled: true
      threshold: 2000
    memory:
      enabled: true
      threshold-percentage: 70

# 业务规则配置
business:
  rules:
    max-tree-level: 5
    max-batch-size: 500  # 开发环境较小的批量大小
    max-search-results: 1000
    max-import-records: 5000

# 日志配置
logging:
  level:
    com.example.functiondemand: DEBUG
    com.example.tenant.routing: DEBUG
    com.example.file.importexport: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    com.alibaba.druid: DEBUG
    # 开启事务日志
    org.springframework.transaction: DEBUG
    org.springframework.orm.jpa: DEBUG
  file:
    name: logs/function-demand-dev.log
    max-size: 100MB
    max-history: 30

# Knife4j API文档配置
knife4j:
  enable: true
  setting:
    enable-debug: true
    enable-swagger-models: true
    enable-document-manage: true
    swagger-model-name: 实体类列表
  cors: true
  production: false
  basic:
    enable: false

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true

# 开发环境特殊配置
debug: true

# 自定义配置
app:
  features:
    # 开发环境启用所有功能
    enable-tree-cache: true
    enable-batch-optimization: true
    enable-performance-monitoring: true
    enable-data-validation: true
    enable-audit-log: true
    # 开发环境特有功能
    enable-debug-mode: true
    enable-sql-logging: true
    enable-performance-logging: true

# Elasticsearch配置
elasticsearch:
  crud:
    enabled: true
    hosts:
      - localhost:9200
    username: 
    password: 
    connection-timeout: 5000
    socket-timeout: 60000
    request-timeout: 60000
    max-connections: 100
    max-connections-per-route: 100
    sync:
      batch-size: 1000
      thread-pool-size: 10
      retry-times: 3
      retry-interval: 1000
      enable-checkpoint: true
      checkpoint-interval: 1000
    tenant:
      enabled: true
      index-prefix: "tenant_"
      auto-create-index: true
      default-shards: 1
      default-replicas: 0
    index:
      use-keyword-as-default: true
      default-shards: 1
      default-replicas: 0
      refresh-interval: "1s"
    queue:
      type: redis
      redis:
        key-prefix: "es:sync:"
        max-retry: 3
        consumer-threads: 5

# 号段ID生成器配置
segment-id:
  enabled: true

# 开发工具配置
dev:
  tools:
    # 自动创建测试数据
    auto-create-test-data: false
    # 重置数据库
    reset-database-on-startup: false
    # 性能分析
    enable-profiling: true
    # 内存监控
    enable-memory-monitoring: true